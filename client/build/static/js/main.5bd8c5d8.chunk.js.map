{"version":3,"sources":["components/Filter/index.tsx","containers/FiltersContainer/index.tsx","components/Todo/index.tsx","utils/API.ts","utils/useGetTodos.ts","containers/TodosContainer/index.tsx","components/InputTodo/index.tsx","contexts/AppReducer.ts","contexts/AppContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Filter","id","useState","name","description","tags","inputs","setInputs","handleChange","evt","target","value","type","placeholder","data-testid","onChange","FiltersContainer","filters","keys","Object","map","e","parseInt","Todo","todo","todo_id","API","test","a","axios","get","getAllTodos","getFilterTodos","filter","params","postNewTodo","data","post","useGetTodos","todos","setTodos","isLoading","setIsLoading","useEffect","then","res","console","log","rows","catch","err","finally","TodosContainer","className","i","InputTodo","inputsTodo","setInputsTodo","handleInput","currentTarget","htmlFor","toString","onClick","preventDefault","tagsArr","replace","split","newTodo","AppReducer","state","action","length","newFilter","payload","newFilters","initState","0","AppContext","createContext","dispatch","Provider","AppProvider","children","useReducer","App","useContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bd8c5d8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\ntype Props = {\n  id: number;\n};\n\nconst Filter: React.FC<Props> = ({ id }) => {\n  const [inputs, setInputs] = useState<FilterInputs>({\n    name: \"\",\n    description: \"\",\n    tags: \"\",\n  });\n\n  const handleChange = (evt: any) => {\n    const { name, value } = evt.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"TagName\"\n        data-testid=\"filter-name\"\n        value={inputs.name}\n        onChange={handleChange}\n      />\n      <input\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Tag Description\"\n        data-testid=\"filter-description\"\n        value={inputs.description}\n        onChange={handleChange}\n      />\n      <input\n        type=\"text\"\n        name=\"tags\"\n        placeholder=\"Tag1, Tag2\"\n        data-testid=\"filter-tags\"\n        value={inputs.tags}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nimport Filter from \"../../components/Filter\";\n\ntype Props = {\n  filters: AppContextType[\"filters\"];\n};\n\nconst FiltersContainer: React.FC<Props> = ({ filters }) => {\n  const keys = Object.keys(filters);\n\n  return (\n    <div>\n      {keys.map((e: string) => {\n        return <Filter id={parseInt(e)} key={e} />;\n      })}\n    </div>\n  );\n};\n\nexport default FiltersContainer;\n","import React from \"react\";\n\ntype Props = {\n  todo: TodoType;\n};\n\nconst Todo: React.FC<Props> = ({ todo }) => {\n  return (\n    <div>\n      <div>{todo.todo_id}</div>\n      <div>{todo.name}</div>\n      <div>{todo.description}</div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import axios from \"axios\";\n\nconst API = {\n  test: async () => await axios.get(\"/_\"),\n  getAllTodos: async () => await axios.get(\"/_todos\"),\n  getFilterTodos: async (filter: FilterQuery) =>\n    await axios.get(\"/_todos\", { params: { ...filter } }),\n  postNewTodo: async (data: NewTodoType) => await axios.post(\"/_todos\", data),\n};\n\nexport default API;\n","import { useState, useEffect } from \"react\";\nimport API from \"./API\";\n\nconst useGetTodos = (name: string, description: string, tags: string[]) => {\n  const [todos, setTodos] = useState<TodoType[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    API.getFilterTodos({ name, description, tags })\n      .then((res) => {\n        console.log(res);\n        setTodos(res.data.rows);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [name, description, tags]);\n\n  return { todos, isLoading };\n};\n\nexport default useGetTodos;\n","import React from \"react\";\n\nimport Todo from \"../../components/Todo\";\n\nimport useGetTodos from \"../../utils/useGetTodos\";\n\ntype Props = {\n  filter: FilterObject;\n};\n\nconst TodosContainer: React.FC<Props> = ({ filter }) => {\n  const { todos, isLoading } = useGetTodos(\n    filter.name,\n    filter.description,\n    filter.tags\n  );\n  return (\n    <div className=\"todos-container\">\n      {todos.map((e: TodoType, i: number) => {\n        return <Todo todo={e} key={e.todo_id} />;\n      })}\n    </div>\n  );\n};\n\nexport default TodosContainer;\n","import React, { useState } from \"react\";\n\nimport API from \"../../utils/API\";\n\ntype InputsTodoType = {\n  name: string;\n  description: string;\n  tags: string;\n};\n\nconst InputTodo: React.FC = () => {\n  const [inputsTodo, setInputsTodo] = useState<InputsTodoType>({\n    name: \"\",\n    description: \"\",\n    tags: \"\",\n  });\n\n  const handleInput = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = evt.currentTarget;\n    setInputsTodo({\n      ...inputsTodo,\n      [name]: value,\n    });\n  };\n\n  const submitTodo = (evt: React.MouseEvent) => {\n    evt.preventDefault();\n    const tagsArr = inputsTodo.tags.replace(\" \", \"\").split(\",\");\n    const newTodo: NewTodoType = {\n      ...inputsTodo,\n      tags: tagsArr,\n    };\n    console.log(newTodo);\n    API.postNewTodo(newTodo)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"todo-name-input\">Name:</label>\n        <input\n          onChange={handleInput}\n          name={\"name\"}\n          value={inputsTodo.name}\n          type=\"text\"\n          id=\"todo-name-input\"\n        />\n        <label htmlFor=\"todo-description-input\">Description:</label>\n        <input\n          onChange={handleInput}\n          name={\"description\"}\n          value={inputsTodo.description}\n          type=\"text\"\n          id=\"todo-description-input\"\n        />\n        <label htmlFor=\"todo-tags-input\">Tags:</label>\n        <input\n          onChange={handleInput}\n          name={\"tags\"}\n          value={inputsTodo.tags.toString()}\n          type=\"text\"\n          id=\"todo-tags-input\"\n        />\n        <button onClick={submitTodo}>Submit Todo</button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputTodo;\n","const AppReducer = (\n  state: AppContextType,\n  action: ActionType\n): AppContextType => {\n  switch (action.type) {\n    case \"ADD_FILTER\": {\n      const id = Object.keys(state.filters).length;\n      const newFilter = {\n        id: id,\n        name: \"\",\n        description: \"\",\n        tags: [],\n      };\n\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [id]: newFilter,\n        },\n      };\n    }\n\n    case \"EDIT_FILTER\": {\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.payload.id]: action.payload,\n        },\n      };\n    }\n\n    case \"REMOVE_FILTER\": {\n      const newFilters = state.filters;\n      delete newFilters[action.payload];\n\n      return {\n        ...state,\n        filters: newFilters,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import { FC, createContext, useReducer, Dispatch } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initState = {\n  filters: {\n    0: {\n      id: 0,\n      name: \"\",\n      description: \"\",\n      tags: [],\n    },\n  },\n};\n\n//Context factory?\nconst AppContext = createContext<{\n  state: AppContextType;\n  dispatch: Dispatch<ActionType>;\n}>({\n  state: initState,\n  dispatch: () => {},\n});\nconst { Provider } = AppContext;\n\nconst AppProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\n\nimport FiltersContainer from \"./containers/FiltersContainer\";\nimport TodosContainer from \"./containers/TodosContainer\";\nimport InputTodo from \"./components/InputTodo\";\n\nimport { AppContext } from \"./contexts/AppContext\";\n\nconst App: React.FC = () => {\n  const { state } = useContext(AppContext);\n\n  const { filters } = state;\n  const keys = Object.keys(filters);\n\n  return (\n    <div className=\"App\">\n      <InputTodo />\n      <FiltersContainer filters={filters} />\n      {keys.map((e: string) => {\n        return <TodosContainer filter={filters[parseInt(e)]} key={e} />;\n      })}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./contexts/AppContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
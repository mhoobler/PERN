{"version":3,"sources":["components/Todo/index.tsx","components/InputTodo/index.tsx","components/Filter/index.tsx","utils/API.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todo","todo","todo_id","name","description","InputTodo","htmlFor","type","id","Filter","useState","tags","inputs","setInputs","placeholder","data-testid","value","onChange","evt","target","API","test","a","axios","get","getAllTodos","postNewTodo","data","post","App","todos","setTodos","useEffect","then","res","console","log","rows","catch","err","className","map","e","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAkBeA,EAVe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC/B,OACE,gCACE,8BAAMA,EAAKC,UACX,8BAAMD,EAAKE,OACX,8BAAMF,EAAKG,kBCIFC,EAfa,WAC1B,OACE,8BACE,iCACE,uBAAOC,QAAQ,kBAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,oBACtB,uBAAOF,QAAQ,yBAAf,0BACA,uBAAOC,KAAK,OAAOC,GAAG,2BACtB,uBAAOF,QAAQ,kBAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,0B,cCsBfC,EA3BU,WAAO,IAAD,EACDC,mBAAiB,CAC3CC,KAAM,KAFqB,mBACtBC,EADsB,KACdC,EADc,KAa7B,OACE,8BACE,uBACEN,KAAK,OACLJ,KAAK,OACLW,YAAY,aACZC,cAAY,cACZC,MAAOJ,EAAOD,KACdM,SAhBe,SAACC,GAAc,IAAD,EACTA,EAAIC,OAApBhB,EADyB,EACzBA,KAAMa,EADmB,EACnBA,MACdH,EAAU,2BACLD,GADI,kBAENT,EAAOa,W,uCCLCI,EANH,CACVC,KAAK,WAAD,4BAAE,sBAAAC,EAAA,sEAAkBC,IAAMC,IAAI,MAA5B,mFAAF,kDAAC,GACLC,YAAY,WAAD,4BAAE,sBAAAH,EAAA,sEAAkBC,IAAMC,IAAI,WAA5B,mFAAF,kDAAC,GACZE,YAAY,WAAD,4BAAE,WAAOC,GAAP,SAAAL,EAAA,sEAAqCC,IAAMK,KAAK,QAASD,GAAzD,mFAAF,mDAAC,IC6BCE,EA1BO,WAAO,IAAD,EACAnB,mBAAqB,IADrB,mBACnBoB,EADmB,KACZC,EADY,KAa1B,OAVAC,qBAAU,WACRZ,EAAIK,cACDQ,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAMG,EAAmBH,EAAIP,KAAKU,KAClCN,EAASM,MAEVC,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,QAC7B,IAGD,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACGV,EAAMW,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,CAAMzC,KAAMyC,GAAQA,EAAExC,kBCfxByC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb7e7550.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { TodoType } from \"./Todo.d\";\n\ntype Props = {\n  todo: TodoType;\n};\n\nconst Todo: React.FC<Props> = ({ todo }) => {\n  return (\n    <div>\n      <div>{todo.todo_id}</div>\n      <div>{todo.name}</div>\n      <div>{todo.description}</div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\n\nconst InputTodo: React.FC = () => {\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"todo-name-input\">Name:</label>\n        <input type=\"text\" id=\"todo-name-input\" />\n        <label htmlFor=\"todo-description-input\">Description:</label>\n        <input type=\"text\" id=\"todo-description-input\" />\n        <label htmlFor=\"todo-tags-input\">Tags:</label>\n        <input type=\"text\" id=\"todo-tags-input\" />\n      </form>\n    </div>\n  );\n};\n\nexport default InputTodo;\n","import React, { useState } from \"react\";\n\ntype Inputs = {\n  tags: string;\n};\n\nconst Filter: React.FC = () => {\n  const [inputs, setInputs] = useState<Inputs>({\n    tags: \"\",\n  });\n\n  const handleChange = (evt: any) => {\n    const { name, value } = evt.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"tags\"\n        placeholder=\"Tag1, Tag2\"\n        data-testid=\"filter-tags\"\n        value={inputs.tags}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\n\nimport { InputTodoType } from \"../components/InputTodo/InputTodo.d\";\n\nconst API = {\n  test: async () => await axios.get(\"/_\"),\n  getAllTodos: async () => await axios.get(\"/_todos\"),\n  postNewTodo: async (data: InputTodoType) => await axios.post(\"todos\", data),\n};\n\nexport default API;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Todo from \"./components/Todo\";\nimport { TodoType } from \"./components/Todo/Todo.d\";\nimport InputTodo from \"./components/InputTodo\";\nimport Filter from \"./components/Filter\";\n\nimport API from \"./utils/API\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoType[]>([]);\n\n  useEffect(() => {\n    API.getAllTodos()\n      .then((res) => {\n        console.log(res);\n        const rows: TodoType[] = res.data.rows;\n        setTodos(rows);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <InputTodo />\n      <Filter />\n      <div className=\"todo-container\">\n        {todos.map((e: TodoType) => {\n          return <Todo todo={e} key={e.todo_id} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Todo/index.tsx","components/InputTodo/index.tsx","utils/API.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todo","todo","todo_id","name","description","InputTodo","htmlFor","type","id","API","test","a","axios","get","getAllTodos","App","useState","todos","setTodos","then","res","console","log","rows","data","catch","err","className","map","e","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAyBeA,EAjBe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE/B,OACE,gCACE,8BACGA,EAAKC,UAER,8BACGD,EAAKE,OAER,8BACGF,EAAKG,kBCDCC,EAhBa,WAE1B,OACE,8BACE,iCACE,uBAAOC,QAAQ,kBAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,oBACtB,uBAAOF,QAAQ,yBAAf,0BACA,uBAAOC,KAAK,OAAOC,GAAG,2BACtB,uBAAOF,QAAQ,kBAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,0B,uCCLfC,EALH,CACVC,KAAK,WAAD,4BAAE,sBAAAC,EAAA,sEAAkBC,IAAMC,IAAI,MAA5B,mFAAF,kDAAC,GACLC,YAAY,WAAD,4BAAE,sBAAAH,EAAA,sEAAkBC,IAAMC,IAAI,WAA5B,mFAAF,kDAAC,IC6BCE,EAxBO,WAAO,IAAD,EACAC,mBAAqB,IADrB,mBACnBC,EADmB,KACZC,EADY,KAY1B,OARAT,EAAIK,cACDK,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ,IAAMG,EAAmBH,EAAII,KAAKD,KAClCL,EAASK,MAEVE,OAAO,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MAG3B,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACGV,EAAMW,KAAK,SAACC,GACX,OAAO,cAAC,EAAD,CAAM5B,KAAM4B,GAAQA,EAAE3B,kBCZxB4B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb044d97.chunk.js","sourcesContent":["import React from 'react';\n\nimport {TodoType} from './Todo.d';\n\ntype Props = {\n  todo: TodoType\n}\n\nconst Todo: React.FC<Props> = ({ todo }) => {\n\n  return (\n    <div>\n      <div>\n        {todo.todo_id}\n      </div>\n      <div>\n        {todo.name}\n      </div>\n      <div>\n        {todo.description}\n      </div>\n    </div>\n  )\n}\n\nexport default Todo;\n","import React from 'react';\n\nconst InputTodo: React.FC = () => {\n\n  return (\n    <div>\n      <form>\n        <label htmlFor='todo-name-input'>Name:</label>\n        <input type='text' id='todo-name-input'/>\n        <label htmlFor='todo-description-input'>Description:</label>\n        <input type='text' id='todo-description-input'/>\n        <label htmlFor='todo-tags-input'>Tags:</label>\n        <input type='text' id='todo-tags-input'/>\n      </form>\n    </div>\n  )\n}\n\nexport default InputTodo;\n","import axios from 'axios';\n\nconst API = {\n  test: async () => await axios.get('/_'),\n  getAllTodos: async () => await axios.get('/_todos')\n};\n\nexport default API;\n","import React, {useState} from 'react';\nimport './App.css';\n\nimport Todo from './components/Todo';\nimport {TodoType} from './components/Todo/Todo.d'\nimport InputTodo from './components/InputTodo';\n\nimport API from './utils/API';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoType[]>([]);\n  \n\n  API.getAllTodos()\n    .then( res => {\n      console.log(res)\n      const rows: TodoType[] = res.data.rows;\n      setTodos(rows);\n    })\n    .catch( err => console.log(err));\n\n  return (\n    <div className=\"App\">\n      <InputTodo />\n      <div className='todo-container'>\n        {todos.map( (e: TodoType) => {\n          return <Todo todo={e} key={e.todo_id}/>\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}